version: '3.6'

volumes:
  portainer-data:
  nodered-data:
  grafana-data:
  postgres-data:
  prom_data:

services:
  reverse-proxy:
    container_name: reverse-proxy
    build: ./traefik
    labels:
      - 'traefik.enable=true'
      - "traefik.http.routers.reverse-proxy.rule=Host(`reverse-proxy.localhost`)"
    restart: always
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --api.insecure=true
      - --providers.docker
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - rmnet

  authelia:
    container_name: authelia
    build: ./authelia
    volumes:
      - ./config:/config
    networks:
      - rmnet
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.authelia.rule=Host(`auth.local.example.com`)'
      - 'traefik.http.routers.authelia.entrypoints=https'
      - 'traefik.http.routers.authelia.tls=true'
      - 'traefik.http.middlewares.authelia.forwardauth.address=http://authelia:9091/api/verify?rd=https://auth.local.example.com'
      - 'traefik.http.middlewares.authelia.forwardauth.trustForwardHeader=true'
      - 'traefik.http.middlewares.authelia.forwardauth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email'
    expose:
      - 9091
    restart: unless-stopped
    environment:
      - TZ=America/Chicago
    healthcheck:
      disable: true

  nodered:
    container_name: nodered
    user: "1000:1000"
    restart: always
    build: ./nodered
    labels:
      - 'traefik.enable=true'
      - "traefik.http.routers.nodered.rule=Host(`nodered.localhost`)"
      # - 'traefik.http.routers.nodered.entrypoints=https'
      # - 'traefik.http.routers.nodered.service=api@internal'
      # - 'traefik.http.routers.nodered.tls=true'
      # - 'traefik.http.routers.nodered.tls.options=default'
    ports:
      - "1880:1880"
    depends_on:
      - reverse-proxy
    networks:
      - rmnet

  grafana:
    container_name: grafana
    user: "1000:1000"
    restart: always
    build: ./grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_SMTP_ENABLED=true
    ports:
      - "3033:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    labels:
      - 'traefik.enable=true'
      - "traefik.http.routers.grafana.rule=Host(`grafana.localhost`)"
    depends_on:
      - reverse-proxy
    networks:
      - rmnet
  # postgres:
  #   container_name: postgres
  #   build: ./postgres
  #   restart: always
  #   labels:
  #     - 'traefik.enable=true' 
  #     - "traefik.http.routers.postgres.rule=Host(`postgres.localhost`)"
  #   environment:
  #     POSTGRES_USER: admin
  #     POSTGRES_PASSWORD: 1234
  #     POSTGRES_DB: Test
  #   volumes: 
  #     - postgres-data:/var/lib/postgresql/data
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - rmnet

networks:
  rmnet:
    driver: bridge
